version: 1
disable_existing_loggers: False
formatters:
  default:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  access:
    format: '[%(asctime)s] %(levelname)s [%(filename)s:%(lineno)d] %(message)s'
  json:
    "()": pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(message)s %(pathname)s %(lineno)d'
filters:
  error_and_above:
    "()": logging_filters.LevelFilter
    min_level: ERROR
  warn_and_below:
    "()": logging_filters.LevelFilter
    max_level: WARNING
handlers:
  default:
    formatter: default
    class: logging.StreamHandler
    stream: ext://sys.stderr
  access:
    formatter: access
    class: logging.StreamHandler
    stream: ext://sys.stdout
    filters:
      - warn_and_below
  json:
    formatter: json
    class: logging.StreamHandler
    stream: ext://sys.stderr
    level: ERROR
    filters:
      - error_and_above
loggers:
  sqlalchemy:
    level: ERROR
    handlers:
      - access
    propagate: yes
  httpx:
    level: ERROR
    handlers:
      - default
    propagate: yes
  uvicorn.error:
    level: ERROR
    handlers:
      - default
    propagate: no
  uvicorn.access:
    level: ERROR
    handlers:
      - access
    propagate: no
  circuit_cli.client:
    level: INFO
    handlers:
      - access
    propagate: no
  announcer_configure_bot:
    level: INFO
    handlers:
      - json
      - access
    propagate: no
root:
  level: INFO
  handlers:
    - access
  propagate: yes
